name: complete

on: [push, pull_request]

jobs:

  build-push-docker-images-for-e2e-tests:
    runs-on: [ubuntu-latest]
    strategy:
      matrix:
        component: [jobservice, spark]
    env:
      GITHUB_PR_SHA: ${{ github.event.pull_request.head.sha }}
      REGISTRY: gcr.io/kf-feast
      MAVEN_CACHE: gs://feast-templocation-kf-feast/.m2.2020-08-19.tar
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive
      - uses: actions/checkout@v2
      - uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - uses: GoogleCloudPlatform/github-actions/setup-gcloud@master
        with:
          version: '290.0.1'
          export_default_credentials: true
          project_id: ${{ secrets.GCP_PROJECT_ID }}
          service_account_key: ${{ secrets.GCP_SA_KEY }}
      - run: gcloud auth configure-docker --quiet
      - name: Get m2 cache
        run: |
          infra/scripts/download-maven-cache.sh \
          --archive-uri ${MAVEN_CACHE} \
          --output-dir $HOME
      - name: Build image
        run: make build-${{ matrix.component }}-docker REGISTRY=${REGISTRY} VERSION=${GITHUB_SHA}
      - name: Push image
        run: |
          docker push ${REGISTRY}/feast-${{ matrix.component }}:${GITHUB_SHA}
          if [ -n "${GITHUB_PR_SHA}" ]; then
            docker tag ${REGISTRY}/feast-${{ matrix.component }}:${GITHUB_SHA} gcr.io/kf-feast/feast-${{ matrix.component }}:${GITHUB_PR_SHA}
            docker push ${REGISTRY}/feast-${{ matrix.component }}:${GITHUB_PR_SHA}
          fi

  lint-java:
    container: gcr.io/kf-feast/feast-ci:latest
    runs-on: [ubuntu-latest]
    steps:
      - uses: actions/checkout@v2
      - name: Lint java
        run: make lint-java

  lint-python:
    container: gcr.io/kf-feast/feast-ci:latest
    runs-on: [ubuntu-latest]
    steps:
      - uses: actions/checkout@v2
      - name: Install dependencies
        run: make install-python-ci-dependencies
      - name: Lint python
        run: make lint-python


  publish-ingestion-jar:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v1
        with:
          java-version: '11'
      - name: Cache local Maven repository
        uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
      - name: build-ingestion-jar-no-tests
        env:
          # Try to add retries to prevent connection resets
          # https://github.community/t/getting-maven-could-not-transfer-artifact-with-500-error-when-using-github-actions/17570
          # https://github.com/actions/virtual-environments/issues/1499#issuecomment-718396233
          MAVEN_OPTS: -Dmaven.wagon.httpconnectionManager.ttlSeconds=25 -Dmaven.wagon.http.retryHandler.count=3 -Dhttp.keepAlive=false -Dmaven.wagon.http.pool=false
          MAVEN_EXTRA_OPTS: -X
        run: make build-java-no-tests REVISION=develop
      - name: Upload ingestion jar
        uses: actions/upload-artifact@v2
        with:
          name: ingestion-jar
          path: spark/ingestion/target/feast-ingestion-spark-develop.jar
          retention-days: 1
